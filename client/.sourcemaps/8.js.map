{"version":3,"sources":["../../src/pages/info-pessoal/info-pessoal.module.ts","../../src/pages/info-pessoal/info-pessoal.ts"],"names":[],"mappings":"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","file":"8.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { InfoPessoalPage } from './info-pessoal';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    InfoPessoalPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(InfoPessoalPage),\r\n  ],\r\n})\r\nexport class InfoPessoalPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/info-pessoal/info-pessoal.module.ts","import { PacientesProvider } from './../../providers/pacientes/pacientes';\r\nimport { Component, ViewChild, ElementRef } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, ToastController } from 'ionic-angular';\r\nimport { GlobalProvider } from './../../providers/global/global';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n/*\r\nAba de informações pessoais\r\nO caso de uso tem o objetivo de persistir as informações básicas do paciente (foto,\r\naltura, peso, convênio, estado civil, endereço, e-mail, telefone, profissão, escolaridade, registro do SUS e tipo sanguíneo).\r\n*/\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-info-pessoal',\r\n  templateUrl: 'info-pessoal.html',\r\n})\r\nexport class InfoPessoalPage {\r\n  @ViewChild('fileInp') fileInput: ElementRef;\r\n  displayName: string;\r\n  page: any;\r\n\r\n  user = {\r\n    uid: \"\",\r\n    foto: \"\",\r\n    nome: \"\",\r\n    cpfCnpj: \"\",\r\n    email: \"\",\r\n    cep: \"\",\r\n    estado: \"\",\r\n    cidade: \"\",\r\n    bairro: \"\",\r\n    logradouro: \"\",\r\n    complemento: \"\",\r\n    registroSus: \"\",\r\n    sexo: \"\",\r\n    estatoCivil: \"\",\r\n    tipoSanguineo: \"\",\r\n    altura: \"\",\r\n    peso: \"\",\r\n    ocupacaoProfissional: \"\",\r\n    nomeResponsavel: \"\",\r\n    dataNascimento: \"\",\r\n    grauEscolaridade: \"\",\r\n    telefoneResidencial: \"\",\r\n    telefoneCelular: \"\"\r\n  };\r\n\r\n  validationMessages = {\r\n    'cpfCnpj': [\r\n      { type: 'required', message: 'CPF obrigatorio.' },\r\n      { type: 'minlength', message: 'CPF Deve possuir 11 números.' },\r\n    ]\r\n  };\r\n\r\n  private pacienteForm: FormGroup;\r\n  constructor(\r\n    public navCtrl: NavController,\r\n    public navParams: NavParams,\r\n    private global: GlobalProvider,\r\n    private formBuilder: FormBuilder,\r\n    public toastCtrl: ToastController,\r\n    public paciente: PacientesProvider) {\r\n\r\n    this.pacienteForm = this.formBuilder.group({\r\n      nome: ['', Validators.required],\r\n      cpfCnpj: ['',[Validators.required, Validators.minLength(11)]],\r\n      telefoneResidencial: [''],\r\n      telefoneCelular: [''],\r\n      email: [''],\r\n      cep: [''],\r\n      estado: [''],\r\n      cidade: [''],\r\n      bairro: [''],\r\n      logradouro: [''],\r\n      complemento: [''],\r\n      registroSus: [''],\r\n      sexo: [''],\r\n      estatoCivil: [''],\r\n      tipoSanguineo: [''],\r\n      altura: [''],\r\n      peso: [''],\r\n      ocupacaoProfissional: [''],\r\n      escolaridade: [''],\r\n      nomeResponsavel: [''],\r\n      dataNascimento: ['']\r\n    });\r\n\r\n    this.global.getCurrentUser().then((user) => {\r\n      if (user) {\r\n        this.user.uid = user.uid;\r\n        this.user.nome = user.displayName;\r\n        this.user.foto = user.photoURL;\r\n        this.user.email = user.email;\r\n        let buscarPaciente = this.paciente.select(user.uid).snapshotChanges().subscribe(action => {\r\n          var dadosDoUsuario = action.payload.val();\r\n          if (dadosDoUsuario) {\r\n            this.user = action.payload.val();\r\n          }\r\n          buscarPaciente.unsubscribe();\r\n        });\r\n       \r\n      } else {\r\n        this.navCtrl.setRoot('HomePage');\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  salvarPaciente(user) {\r\n    this.paciente.update(user);\r\n    this.showMessage(\"Dados atualizados com sucesso!\");\r\n  }\r\n\r\n  uploadFoto(event) {\r\n    this.readThis(event.target);\r\n  }\r\n\r\n  readThis(inputValue: any) {\r\n    var file: File = inputValue.files[0];\r\n    var myReader: FileReader = new FileReader();\r\n\r\n    myReader.onloadend = (e) => {\r\n      this.user.foto = myReader.result;\r\n    }\r\n    myReader.readAsDataURL(file);\r\n  }\r\n\r\n  clickUploadFoto() {\r\n    this.fileInput.nativeElement.click();\r\n  }\r\n\r\n  showMessage(m) {\r\n    let toast = this.toastCtrl.create({\r\n      message: m,\r\n      showCloseButton: true,\r\n      closeButtonText: 'Ok',\r\n      duration: 3000\r\n    });\r\n    toast.present();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/info-pessoal/info-pessoal.ts"],"sourceRoot":""}